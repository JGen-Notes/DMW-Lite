/**
 * generated by Xtext 2.15.0
 */
package eu.jgen.notes.dmw.lite.lang.impl;

import eu.jgen.notes.dmw.lite.lang.LangPackage;
import eu.jgen.notes.dmw.lite.lang.YJoin;
import eu.jgen.notes.dmw.lite.lang.YReadStatement;
import eu.jgen.notes.dmw.lite.lang.YStructRefPair;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.xtext.xbase.XExpression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>YRead Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YReadStatementImpl#getStructs <em>Structs</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YReadStatementImpl#getJoinclause <em>Joinclause</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YReadStatementImpl#getWhereclause <em>Whereclause</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YReadStatementImpl#getSuccessExpressions <em>Success Expressions</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YReadStatementImpl#getNotfoundExpressions <em>Notfound Expressions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class YReadStatementImpl extends XExpressionImpl implements YReadStatement
{
  /**
   * The cached value of the '{@link #getStructs() <em>Structs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStructs()
   * @generated
   * @ordered
   */
  protected EList<YStructRefPair> structs;

  /**
   * The cached value of the '{@link #getJoinclause() <em>Joinclause</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJoinclause()
   * @generated
   * @ordered
   */
  protected YJoin joinclause;

  /**
   * The cached value of the '{@link #getWhereclause() <em>Whereclause</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhereclause()
   * @generated
   * @ordered
   */
  protected XExpression whereclause;

  /**
   * The cached value of the '{@link #getSuccessExpressions() <em>Success Expressions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSuccessExpressions()
   * @generated
   * @ordered
   */
  protected EList<XExpression> successExpressions;

  /**
   * The cached value of the '{@link #getNotfoundExpressions() <em>Notfound Expressions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNotfoundExpressions()
   * @generated
   * @ordered
   */
  protected EList<XExpression> notfoundExpressions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected YReadStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LangPackage.Literals.YREAD_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<YStructRefPair> getStructs()
  {
    if (structs == null)
    {
      structs = new EObjectContainmentEList<YStructRefPair>(YStructRefPair.class, this, LangPackage.YREAD_STATEMENT__STRUCTS);
    }
    return structs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YJoin getJoinclause()
  {
    return joinclause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetJoinclause(YJoin newJoinclause, NotificationChain msgs)
  {
    YJoin oldJoinclause = joinclause;
    joinclause = newJoinclause;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LangPackage.YREAD_STATEMENT__JOINCLAUSE, oldJoinclause, newJoinclause);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setJoinclause(YJoin newJoinclause)
  {
    if (newJoinclause != joinclause)
    {
      NotificationChain msgs = null;
      if (joinclause != null)
        msgs = ((InternalEObject)joinclause).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LangPackage.YREAD_STATEMENT__JOINCLAUSE, null, msgs);
      if (newJoinclause != null)
        msgs = ((InternalEObject)newJoinclause).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LangPackage.YREAD_STATEMENT__JOINCLAUSE, null, msgs);
      msgs = basicSetJoinclause(newJoinclause, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YREAD_STATEMENT__JOINCLAUSE, newJoinclause, newJoinclause));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XExpression getWhereclause()
  {
    return whereclause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWhereclause(XExpression newWhereclause, NotificationChain msgs)
  {
    XExpression oldWhereclause = whereclause;
    whereclause = newWhereclause;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LangPackage.YREAD_STATEMENT__WHERECLAUSE, oldWhereclause, newWhereclause);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWhereclause(XExpression newWhereclause)
  {
    if (newWhereclause != whereclause)
    {
      NotificationChain msgs = null;
      if (whereclause != null)
        msgs = ((InternalEObject)whereclause).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LangPackage.YREAD_STATEMENT__WHERECLAUSE, null, msgs);
      if (newWhereclause != null)
        msgs = ((InternalEObject)newWhereclause).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LangPackage.YREAD_STATEMENT__WHERECLAUSE, null, msgs);
      msgs = basicSetWhereclause(newWhereclause, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YREAD_STATEMENT__WHERECLAUSE, newWhereclause, newWhereclause));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<XExpression> getSuccessExpressions()
  {
    if (successExpressions == null)
    {
      successExpressions = new EObjectContainmentEList<XExpression>(XExpression.class, this, LangPackage.YREAD_STATEMENT__SUCCESS_EXPRESSIONS);
    }
    return successExpressions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<XExpression> getNotfoundExpressions()
  {
    if (notfoundExpressions == null)
    {
      notfoundExpressions = new EObjectContainmentEList<XExpression>(XExpression.class, this, LangPackage.YREAD_STATEMENT__NOTFOUND_EXPRESSIONS);
    }
    return notfoundExpressions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LangPackage.YREAD_STATEMENT__STRUCTS:
        return ((InternalEList<?>)getStructs()).basicRemove(otherEnd, msgs);
      case LangPackage.YREAD_STATEMENT__JOINCLAUSE:
        return basicSetJoinclause(null, msgs);
      case LangPackage.YREAD_STATEMENT__WHERECLAUSE:
        return basicSetWhereclause(null, msgs);
      case LangPackage.YREAD_STATEMENT__SUCCESS_EXPRESSIONS:
        return ((InternalEList<?>)getSuccessExpressions()).basicRemove(otherEnd, msgs);
      case LangPackage.YREAD_STATEMENT__NOTFOUND_EXPRESSIONS:
        return ((InternalEList<?>)getNotfoundExpressions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LangPackage.YREAD_STATEMENT__STRUCTS:
        return getStructs();
      case LangPackage.YREAD_STATEMENT__JOINCLAUSE:
        return getJoinclause();
      case LangPackage.YREAD_STATEMENT__WHERECLAUSE:
        return getWhereclause();
      case LangPackage.YREAD_STATEMENT__SUCCESS_EXPRESSIONS:
        return getSuccessExpressions();
      case LangPackage.YREAD_STATEMENT__NOTFOUND_EXPRESSIONS:
        return getNotfoundExpressions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LangPackage.YREAD_STATEMENT__STRUCTS:
        getStructs().clear();
        getStructs().addAll((Collection<? extends YStructRefPair>)newValue);
        return;
      case LangPackage.YREAD_STATEMENT__JOINCLAUSE:
        setJoinclause((YJoin)newValue);
        return;
      case LangPackage.YREAD_STATEMENT__WHERECLAUSE:
        setWhereclause((XExpression)newValue);
        return;
      case LangPackage.YREAD_STATEMENT__SUCCESS_EXPRESSIONS:
        getSuccessExpressions().clear();
        getSuccessExpressions().addAll((Collection<? extends XExpression>)newValue);
        return;
      case LangPackage.YREAD_STATEMENT__NOTFOUND_EXPRESSIONS:
        getNotfoundExpressions().clear();
        getNotfoundExpressions().addAll((Collection<? extends XExpression>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LangPackage.YREAD_STATEMENT__STRUCTS:
        getStructs().clear();
        return;
      case LangPackage.YREAD_STATEMENT__JOINCLAUSE:
        setJoinclause((YJoin)null);
        return;
      case LangPackage.YREAD_STATEMENT__WHERECLAUSE:
        setWhereclause((XExpression)null);
        return;
      case LangPackage.YREAD_STATEMENT__SUCCESS_EXPRESSIONS:
        getSuccessExpressions().clear();
        return;
      case LangPackage.YREAD_STATEMENT__NOTFOUND_EXPRESSIONS:
        getNotfoundExpressions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LangPackage.YREAD_STATEMENT__STRUCTS:
        return structs != null && !structs.isEmpty();
      case LangPackage.YREAD_STATEMENT__JOINCLAUSE:
        return joinclause != null;
      case LangPackage.YREAD_STATEMENT__WHERECLAUSE:
        return whereclause != null;
      case LangPackage.YREAD_STATEMENT__SUCCESS_EXPRESSIONS:
        return successExpressions != null && !successExpressions.isEmpty();
      case LangPackage.YREAD_STATEMENT__NOTFOUND_EXPRESSIONS:
        return notfoundExpressions != null && !notfoundExpressions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //YReadStatementImpl
