/**
 * generated by Xtext 2.12.0
 */
package eu.jgen.notes.dmw.lite.lang;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>YAnnot Attr</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.YAnnotAttr#getName <em>Name</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.YAnnotAttr#getYclass <em>Yclass</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.YAnnotAttr#getOptional <em>Optional</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.YAnnotAttr#getAnnots <em>Annots</em>}</li>
 * </ul>
 *
 * @see eu.jgen.notes.dmw.lite.lang.LangPackage#getYAnnotAttr()
 * @model
 * @generated
 */
public interface YAnnotAttr extends YAnnotEntityInner, YAnnotIdInner
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see eu.jgen.notes.dmw.lite.lang.LangPackage#getYAnnotAttr_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link eu.jgen.notes.dmw.lite.lang.YAnnotAttr#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Yclass</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Yclass</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Yclass</em>' reference.
   * @see #setYclass(YClass)
   * @see eu.jgen.notes.dmw.lite.lang.LangPackage#getYAnnotAttr_Yclass()
   * @model
   * @generated
   */
  YClass getYclass();

  /**
   * Sets the value of the '{@link eu.jgen.notes.dmw.lite.lang.YAnnotAttr#getYclass <em>Yclass</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Yclass</em>' reference.
   * @see #getYclass()
   * @generated
   */
  void setYclass(YClass value);

  /**
   * Returns the value of the '<em><b>Optional</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Optional</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Optional</em>' attribute.
   * @see #setOptional(String)
   * @see eu.jgen.notes.dmw.lite.lang.LangPackage#getYAnnotAttr_Optional()
   * @model
   * @generated
   */
  String getOptional();

  /**
   * Sets the value of the '{@link eu.jgen.notes.dmw.lite.lang.YAnnotAttr#getOptional <em>Optional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Optional</em>' attribute.
   * @see #getOptional()
   * @generated
   */
  void setOptional(String value);

  /**
   * Returns the value of the '<em><b>Annots</b></em>' containment reference list.
   * The list contents are of type {@link eu.jgen.notes.dmw.lite.lang.YAnnot}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Annots</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Annots</em>' containment reference list.
   * @see eu.jgen.notes.dmw.lite.lang.LangPackage#getYAnnotAttr_Annots()
   * @model containment="true"
   * @generated
   */
  EList<YAnnot> getAnnots();

} // YAnnotAttr
