/**
 * generated by Xtext 2.12.0
 */
package eu.jgen.notes.dmw.lite.lang.impl;

import eu.jgen.notes.dmw.lite.lang.LangPackage;
import eu.jgen.notes.dmw.lite.lang.YAnnotEntity;
import eu.jgen.notes.dmw.lite.lang.YAnnotEntityInner;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>YAnnot Entity</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YAnnotEntityImpl#getName <em>Name</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YAnnotEntityImpl#getSuperannot <em>Superannot</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YAnnotEntityImpl#getAnnots <em>Annots</em>}</li>
 * </ul>
 *
 * @generated
 */
public class YAnnotEntityImpl extends MinimalEObjectImpl.Container implements YAnnotEntity
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getSuperannot() <em>Superannot</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSuperannot()
   * @generated
   * @ordered
   */
  protected YAnnotEntity superannot;

  /**
   * The cached value of the '{@link #getAnnots() <em>Annots</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnnots()
   * @generated
   * @ordered
   */
  protected EList<YAnnotEntityInner> annots;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected YAnnotEntityImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LangPackage.Literals.YANNOT_ENTITY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YANNOT_ENTITY__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YAnnotEntity getSuperannot()
  {
    if (superannot != null && superannot.eIsProxy())
    {
      InternalEObject oldSuperannot = (InternalEObject)superannot;
      superannot = (YAnnotEntity)eResolveProxy(oldSuperannot);
      if (superannot != oldSuperannot)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, LangPackage.YANNOT_ENTITY__SUPERANNOT, oldSuperannot, superannot));
      }
    }
    return superannot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YAnnotEntity basicGetSuperannot()
  {
    return superannot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSuperannot(YAnnotEntity newSuperannot)
  {
    YAnnotEntity oldSuperannot = superannot;
    superannot = newSuperannot;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YANNOT_ENTITY__SUPERANNOT, oldSuperannot, superannot));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<YAnnotEntityInner> getAnnots()
  {
    if (annots == null)
    {
      annots = new EObjectContainmentEList<YAnnotEntityInner>(YAnnotEntityInner.class, this, LangPackage.YANNOT_ENTITY__ANNOTS);
    }
    return annots;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LangPackage.YANNOT_ENTITY__ANNOTS:
        return ((InternalEList<?>)getAnnots()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LangPackage.YANNOT_ENTITY__NAME:
        return getName();
      case LangPackage.YANNOT_ENTITY__SUPERANNOT:
        if (resolve) return getSuperannot();
        return basicGetSuperannot();
      case LangPackage.YANNOT_ENTITY__ANNOTS:
        return getAnnots();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LangPackage.YANNOT_ENTITY__NAME:
        setName((String)newValue);
        return;
      case LangPackage.YANNOT_ENTITY__SUPERANNOT:
        setSuperannot((YAnnotEntity)newValue);
        return;
      case LangPackage.YANNOT_ENTITY__ANNOTS:
        getAnnots().clear();
        getAnnots().addAll((Collection<? extends YAnnotEntityInner>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LangPackage.YANNOT_ENTITY__NAME:
        setName(NAME_EDEFAULT);
        return;
      case LangPackage.YANNOT_ENTITY__SUPERANNOT:
        setSuperannot((YAnnotEntity)null);
        return;
      case LangPackage.YANNOT_ENTITY__ANNOTS:
        getAnnots().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LangPackage.YANNOT_ENTITY__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case LangPackage.YANNOT_ENTITY__SUPERANNOT:
        return superannot != null;
      case LangPackage.YANNOT_ENTITY__ANNOTS:
        return annots != null && !annots.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //YAnnotEntityImpl
