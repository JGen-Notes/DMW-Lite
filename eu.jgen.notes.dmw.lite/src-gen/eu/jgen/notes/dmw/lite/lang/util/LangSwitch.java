/**
 * generated by Xtext 2.15.0
 */
package eu.jgen.notes.dmw.lite.lang.util;

import eu.jgen.notes.dmw.lite.lang.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see eu.jgen.notes.dmw.lite.lang.LangPackage
 * @generated
 */
public class LangSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static LangPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LangSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = LangPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case LangPackage.YWIDGET:
      {
        YWidget yWidget = (YWidget)theEObject;
        T result = caseYWidget(yWidget);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YPACKAGE_DECLARATION:
      {
        YPackageDeclaration yPackageDeclaration = (YPackageDeclaration)theEObject;
        T result = caseYPackageDeclaration(yPackageDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YCLASS:
      {
        YClass yClass = (YClass)theEObject;
        T result = caseYClass(yClass);
        if (result == null) result = caseYMember(yClass);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YMEMBER:
      {
        YMember yMember = (YMember)theEObject;
        T result = caseYMember(yMember);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YPROPERTY:
      {
        YProperty yProperty = (YProperty)theEObject;
        T result = caseYProperty(yProperty);
        if (result == null) result = caseYMember(yProperty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YTUPLES:
      {
        YTuples yTuples = (YTuples)theEObject;
        T result = caseYTuples(yTuples);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YFUNCTION:
      {
        YFunction yFunction = (YFunction)theEObject;
        T result = caseYFunction(yFunction);
        if (result == null) result = caseYMember(yFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.XEXPRESSION:
      {
        XExpression xExpression = (XExpression)theEObject;
        T result = caseXExpression(xExpression);
        if (result == null) result = caseXbase_XExpression(xExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YREAD_EACH_STATEMENT:
      {
        YReadEachStatement yReadEachStatement = (YReadEachStatement)theEObject;
        T result = caseYReadEachStatement(yReadEachStatement);
        if (result == null) result = caseXbase_XExpression(yReadEachStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YUPDATE_STATEMENT:
      {
        YUpdateStatement yUpdateStatement = (YUpdateStatement)theEObject;
        T result = caseYUpdateStatement(yUpdateStatement);
        if (result == null) result = caseXbase_XExpression(yUpdateStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YDELETE_STATEMENT:
      {
        YDeleteStatement yDeleteStatement = (YDeleteStatement)theEObject;
        T result = caseYDeleteStatement(yDeleteStatement);
        if (result == null) result = caseXbase_XExpression(yDeleteStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YASSOCIATE_STATEMENT:
      {
        YAssociateStatement yAssociateStatement = (YAssociateStatement)theEObject;
        T result = caseYAssociateStatement(yAssociateStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YSTRUCT_REF_PAIR:
      {
        YStructRefPair yStructRefPair = (YStructRefPair)theEObject;
        T result = caseYStructRefPair(yStructRefPair);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YJOIN:
      {
        YJoin yJoin = (YJoin)theEObject;
        T result = caseYJoin(yJoin);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YJOIN_DEF:
      {
        YJoinDef yJoinDef = (YJoinDef)theEObject;
        T result = caseYJoinDef(yJoinDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT:
      {
        YAnnot yAnnot = (YAnnot)theEObject;
        T result = caseYAnnot(yAnnot);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_TOP:
      {
        YAnnotTop yAnnotTop = (YAnnotTop)theEObject;
        T result = caseYAnnotTop(yAnnotTop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_DEFAULT_TYPE:
      {
        YAnnotDefaultType yAnnotDefaultType = (YAnnotDefaultType)theEObject;
        T result = caseYAnnotDefaultType(yAnnotDefaultType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_DEFAULT_TEXT:
      {
        YAnnotDefaultText yAnnotDefaultText = (YAnnotDefaultText)theEObject;
        T result = caseYAnnotDefaultText(yAnnotDefaultText);
        if (result == null) result = caseYAnnotDefaultType(yAnnotDefaultText);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_DEFAULT_NUMBER:
      {
        YAnnotDefaultNumber yAnnotDefaultNumber = (YAnnotDefaultNumber)theEObject;
        T result = caseYAnnotDefaultNumber(yAnnotDefaultNumber);
        if (result == null) result = caseYAnnotDefaultType(yAnnotDefaultNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_ENTITY_INNER:
      {
        YAnnotEntityInner yAnnotEntityInner = (YAnnotEntityInner)theEObject;
        T result = caseYAnnotEntityInner(yAnnotEntityInner);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_ENTITY:
      {
        YAnnotEntity yAnnotEntity = (YAnnotEntity)theEObject;
        T result = caseYAnnotEntity(yAnnotEntity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_ATTR:
      {
        YAnnotAttr yAnnotAttr = (YAnnotAttr)theEObject;
        T result = caseYAnnotAttr(yAnnotAttr);
        if (result == null) result = caseYAnnotEntityInner(yAnnotAttr);
        if (result == null) result = caseYAnnotIdInner(yAnnotAttr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_REL:
      {
        YAnnotRel yAnnotRel = (YAnnotRel)theEObject;
        T result = caseYAnnotRel(yAnnotRel);
        if (result == null) result = caseYAnnotEntityInner(yAnnotRel);
        if (result == null) result = caseYAnnotIdInner(yAnnotRel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_ID_INNER:
      {
        YAnnotIdInner yAnnotIdInner = (YAnnotIdInner)theEObject;
        T result = caseYAnnotIdInner(yAnnotIdInner);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_ID:
      {
        YAnnotId yAnnotId = (YAnnotId)theEObject;
        T result = caseYAnnotId(yAnnotId);
        if (result == null) result = caseYAnnotEntityInner(yAnnotId);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_TECHNICAL_DESIGN:
      {
        YAnnotTechnicalDesign yAnnotTechnicalDesign = (YAnnotTechnicalDesign)theEObject;
        T result = caseYAnnotTechnicalDesign(yAnnotTechnicalDesign);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_TABLE:
      {
        YAnnotTable yAnnotTable = (YAnnotTable)theEObject;
        T result = caseYAnnotTable(yAnnotTable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_COLUMN:
      {
        YAnnotColumn yAnnotColumn = (YAnnotColumn)theEObject;
        T result = caseYAnnotColumn(yAnnotColumn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_COLUMN_LIKE:
      {
        YAnnotColumnLike yAnnotColumnLike = (YAnnotColumnLike)theEObject;
        T result = caseYAnnotColumnLike(yAnnotColumnLike);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_ABSTRACT_COLUMN:
      {
        YAnnotAbstractColumn yAnnotAbstractColumn = (YAnnotAbstractColumn)theEObject;
        T result = caseYAnnotAbstractColumn(yAnnotAbstractColumn);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_PRIMARY_KEY:
      {
        YAnnotPrimaryKey yAnnotPrimaryKey = (YAnnotPrimaryKey)theEObject;
        T result = caseYAnnotPrimaryKey(yAnnotPrimaryKey);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_FOREIGN_KEY:
      {
        YAnnotForeignKey yAnnotForeignKey = (YAnnotForeignKey)theEObject;
        T result = caseYAnnotForeignKey(yAnnotForeignKey);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_JAVA:
      {
        YAnnotJava yAnnotJava = (YAnnotJava)theEObject;
        T result = caseYAnnotJava(yAnnotJava);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_SWIFT:
      {
        YAnnotSwift yAnnotSwift = (YAnnotSwift)theEObject;
        T result = caseYAnnotSwift(yAnnotSwift);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_DATABASE:
      {
        YAnnotDatabase yAnnotDatabase = (YAnnotDatabase)theEObject;
        T result = caseYAnnotDatabase(yAnnotDatabase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.DB_EXPRESSION:
      {
        DBExpression dbExpression = (DBExpression)theEObject;
        T result = caseDBExpression(dbExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YREAD_STATEMENT:
      {
        YReadStatement yReadStatement = (YReadStatement)theEObject;
        T result = caseYReadStatement(yReadStatement);
        if (result == null) result = caseXExpression(yReadStatement);
        if (result == null) result = caseXbase_XExpression(yReadStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YCREATE_STATEMENT:
      {
        YCreateStatement yCreateStatement = (YCreateStatement)theEObject;
        T result = caseYCreateStatement(yCreateStatement);
        if (result == null) result = caseXExpression(yCreateStatement);
        if (result == null) result = caseXbase_XExpression(yCreateStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YWHERE:
      {
        YWhere yWhere = (YWhere)theEObject;
        T result = caseYWhere(yWhere);
        if (result == null) result = caseXExpression(yWhere);
        if (result == null) result = caseXbase_XExpression(yWhere);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_LENGTH:
      {
        YAnnotLength yAnnotLength = (YAnnotLength)theEObject;
        T result = caseYAnnotLength(yAnnotLength);
        if (result == null) result = caseYAnnot(yAnnotLength);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_MAX:
      {
        YAnnotMax yAnnotMax = (YAnnotMax)theEObject;
        T result = caseYAnnotMax(yAnnotMax);
        if (result == null) result = caseYAnnot(yAnnotMax);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_DECIMAL:
      {
        YAnnotDecimal yAnnotDecimal = (YAnnotDecimal)theEObject;
        T result = caseYAnnotDecimal(yAnnotDecimal);
        if (result == null) result = caseYAnnot(yAnnotDecimal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_DEFAULT:
      {
        YAnnotDefault yAnnotDefault = (YAnnotDefault)theEObject;
        T result = caseYAnnotDefault(yAnnotDefault);
        if (result == null) result = caseYAnnot(yAnnotDefault);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_ACTION:
      {
        YAnnotAction yAnnotAction = (YAnnotAction)theEObject;
        T result = caseYAnnotAction(yAnnotAction);
        if (result == null) result = caseYAnnot(yAnnotAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.YANNOT_MESSAGE:
      {
        YAnnotMessage yAnnotMessage = (YAnnotMessage)theEObject;
        T result = caseYAnnotMessage(yAnnotMessage);
        if (result == null) result = caseYAnnot(yAnnotMessage);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LangPackage.DB_BINARY_OPERATION:
      {
        DBBinaryOperation dbBinaryOperation = (DBBinaryOperation)theEObject;
        T result = caseDBBinaryOperation(dbBinaryOperation);
        if (result == null) result = caseDBExpression(dbBinaryOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YWidget</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YWidget</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYWidget(YWidget object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YPackage Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YPackage Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYPackageDeclaration(YPackageDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YClass</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YClass</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYClass(YClass object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YMember</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YMember</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYMember(YMember object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YProperty</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YProperty</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYProperty(YProperty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YTuples</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YTuples</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYTuples(YTuples object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YFunction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YFunction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYFunction(YFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XExpression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XExpression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXExpression(XExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YRead Each Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YRead Each Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYReadEachStatement(YReadEachStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YUpdate Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YUpdate Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYUpdateStatement(YUpdateStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YDelete Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YDelete Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYDeleteStatement(YDeleteStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAssociate Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAssociate Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAssociateStatement(YAssociateStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YStruct Ref Pair</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YStruct Ref Pair</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYStructRefPair(YStructRefPair object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YJoin</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YJoin</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYJoin(YJoin object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YJoin Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YJoin Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYJoinDef(YJoinDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnot(YAnnot object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Top</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Top</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotTop(YAnnotTop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Default Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Default Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotDefaultType(YAnnotDefaultType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Default Text</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Default Text</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotDefaultText(YAnnotDefaultText object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Default Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Default Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotDefaultNumber(YAnnotDefaultNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Entity Inner</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Entity Inner</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotEntityInner(YAnnotEntityInner object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotEntity(YAnnotEntity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Attr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Attr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotAttr(YAnnotAttr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Rel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Rel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotRel(YAnnotRel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Id Inner</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Id Inner</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotIdInner(YAnnotIdInner object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Id</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Id</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotId(YAnnotId object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Technical Design</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Technical Design</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotTechnicalDesign(YAnnotTechnicalDesign object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Table</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Table</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotTable(YAnnotTable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Column</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Column</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotColumn(YAnnotColumn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Column Like</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Column Like</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotColumnLike(YAnnotColumnLike object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Abstract Column</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Abstract Column</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotAbstractColumn(YAnnotAbstractColumn object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Primary Key</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Primary Key</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotPrimaryKey(YAnnotPrimaryKey object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Foreign Key</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Foreign Key</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotForeignKey(YAnnotForeignKey object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Java</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Java</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotJava(YAnnotJava object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Swift</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Swift</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotSwift(YAnnotSwift object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Database</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Database</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotDatabase(YAnnotDatabase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DB Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DB Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDBExpression(DBExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YRead Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YRead Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYReadStatement(YReadStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YCreate Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YCreate Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYCreateStatement(YCreateStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YWhere</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YWhere</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYWhere(YWhere object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Length</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Length</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotLength(YAnnotLength object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Max</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Max</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotMax(YAnnotMax object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Decimal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Decimal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotDecimal(YAnnotDecimal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Default</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Default</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotDefault(YAnnotDefault object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotAction(YAnnotAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>YAnnot Message</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>YAnnot Message</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYAnnotMessage(YAnnotMessage object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DB Binary Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DB Binary Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDBBinaryOperation(DBBinaryOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XExpression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XExpression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @since 2.7
   * @generated
   */
  public T caseXbase_XExpression(org.eclipse.xtext.xbase.XExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //LangSwitch
