/**
 * generated by Xtext 2.15.0
 */
package eu.jgen.notes.dmw.lite.lang.impl;

import eu.jgen.notes.dmw.lite.lang.LangPackage;
import eu.jgen.notes.dmw.lite.lang.YAccessLevel;
import eu.jgen.notes.dmw.lite.lang.YAnnot;
import eu.jgen.notes.dmw.lite.lang.YAnnotAttr;
import eu.jgen.notes.dmw.lite.lang.YProperty;
import eu.jgen.notes.dmw.lite.lang.YTuples;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.xtext.common.types.JvmTypeReference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>YProperty</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YPropertyImpl#getAccess <em>Access</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YPropertyImpl#getType <em>Type</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YPropertyImpl#getTuples <em>Tuples</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YPropertyImpl#isOptional <em>Optional</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YPropertyImpl#getAttrRef <em>Attr Ref</em>}</li>
 *   <li>{@link eu.jgen.notes.dmw.lite.lang.impl.YPropertyImpl#getAnnotations <em>Annotations</em>}</li>
 * </ul>
 *
 * @generated
 */
public class YPropertyImpl extends YMemberImpl implements YProperty
{
  /**
   * The default value of the '{@link #getAccess() <em>Access</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccess()
   * @generated
   * @ordered
   */
  protected static final YAccessLevel ACCESS_EDEFAULT = YAccessLevel.PRIVATE;

  /**
   * The cached value of the '{@link #getAccess() <em>Access</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccess()
   * @generated
   * @ordered
   */
  protected YAccessLevel access = ACCESS_EDEFAULT;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected JvmTypeReference type;

  /**
   * The cached value of the '{@link #getTuples() <em>Tuples</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTuples()
   * @generated
   * @ordered
   */
  protected YTuples tuples;

  /**
   * The default value of the '{@link #isOptional() <em>Optional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOptional()
   * @generated
   * @ordered
   */
  protected static final boolean OPTIONAL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isOptional() <em>Optional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOptional()
   * @generated
   * @ordered
   */
  protected boolean optional = OPTIONAL_EDEFAULT;

  /**
   * The cached value of the '{@link #getAttrRef() <em>Attr Ref</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttrRef()
   * @generated
   * @ordered
   */
  protected YAnnotAttr attrRef;

  /**
   * The cached value of the '{@link #getAnnotations() <em>Annotations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnnotations()
   * @generated
   * @ordered
   */
  protected EList<YAnnot> annotations;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected YPropertyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LangPackage.Literals.YPROPERTY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YAccessLevel getAccess()
  {
    return access;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAccess(YAccessLevel newAccess)
  {
    YAccessLevel oldAccess = access;
    access = newAccess == null ? ACCESS_EDEFAULT : newAccess;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YPROPERTY__ACCESS, oldAccess, access));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JvmTypeReference getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetType(JvmTypeReference newType, NotificationChain msgs)
  {
    JvmTypeReference oldType = type;
    type = newType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LangPackage.YPROPERTY__TYPE, oldType, newType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(JvmTypeReference newType)
  {
    if (newType != type)
    {
      NotificationChain msgs = null;
      if (type != null)
        msgs = ((InternalEObject)type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LangPackage.YPROPERTY__TYPE, null, msgs);
      if (newType != null)
        msgs = ((InternalEObject)newType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LangPackage.YPROPERTY__TYPE, null, msgs);
      msgs = basicSetType(newType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YPROPERTY__TYPE, newType, newType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YTuples getTuples()
  {
    return tuples;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTuples(YTuples newTuples, NotificationChain msgs)
  {
    YTuples oldTuples = tuples;
    tuples = newTuples;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LangPackage.YPROPERTY__TUPLES, oldTuples, newTuples);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTuples(YTuples newTuples)
  {
    if (newTuples != tuples)
    {
      NotificationChain msgs = null;
      if (tuples != null)
        msgs = ((InternalEObject)tuples).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LangPackage.YPROPERTY__TUPLES, null, msgs);
      if (newTuples != null)
        msgs = ((InternalEObject)newTuples).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LangPackage.YPROPERTY__TUPLES, null, msgs);
      msgs = basicSetTuples(newTuples, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YPROPERTY__TUPLES, newTuples, newTuples));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isOptional()
  {
    return optional;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOptional(boolean newOptional)
  {
    boolean oldOptional = optional;
    optional = newOptional;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YPROPERTY__OPTIONAL, oldOptional, optional));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YAnnotAttr getAttrRef()
  {
    if (attrRef != null && attrRef.eIsProxy())
    {
      InternalEObject oldAttrRef = (InternalEObject)attrRef;
      attrRef = (YAnnotAttr)eResolveProxy(oldAttrRef);
      if (attrRef != oldAttrRef)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, LangPackage.YPROPERTY__ATTR_REF, oldAttrRef, attrRef));
      }
    }
    return attrRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YAnnotAttr basicGetAttrRef()
  {
    return attrRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAttrRef(YAnnotAttr newAttrRef)
  {
    YAnnotAttr oldAttrRef = attrRef;
    attrRef = newAttrRef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LangPackage.YPROPERTY__ATTR_REF, oldAttrRef, attrRef));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<YAnnot> getAnnotations()
  {
    if (annotations == null)
    {
      annotations = new EObjectContainmentEList<YAnnot>(YAnnot.class, this, LangPackage.YPROPERTY__ANNOTATIONS);
    }
    return annotations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LangPackage.YPROPERTY__TYPE:
        return basicSetType(null, msgs);
      case LangPackage.YPROPERTY__TUPLES:
        return basicSetTuples(null, msgs);
      case LangPackage.YPROPERTY__ANNOTATIONS:
        return ((InternalEList<?>)getAnnotations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LangPackage.YPROPERTY__ACCESS:
        return getAccess();
      case LangPackage.YPROPERTY__TYPE:
        return getType();
      case LangPackage.YPROPERTY__TUPLES:
        return getTuples();
      case LangPackage.YPROPERTY__OPTIONAL:
        return isOptional();
      case LangPackage.YPROPERTY__ATTR_REF:
        if (resolve) return getAttrRef();
        return basicGetAttrRef();
      case LangPackage.YPROPERTY__ANNOTATIONS:
        return getAnnotations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LangPackage.YPROPERTY__ACCESS:
        setAccess((YAccessLevel)newValue);
        return;
      case LangPackage.YPROPERTY__TYPE:
        setType((JvmTypeReference)newValue);
        return;
      case LangPackage.YPROPERTY__TUPLES:
        setTuples((YTuples)newValue);
        return;
      case LangPackage.YPROPERTY__OPTIONAL:
        setOptional((Boolean)newValue);
        return;
      case LangPackage.YPROPERTY__ATTR_REF:
        setAttrRef((YAnnotAttr)newValue);
        return;
      case LangPackage.YPROPERTY__ANNOTATIONS:
        getAnnotations().clear();
        getAnnotations().addAll((Collection<? extends YAnnot>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LangPackage.YPROPERTY__ACCESS:
        setAccess(ACCESS_EDEFAULT);
        return;
      case LangPackage.YPROPERTY__TYPE:
        setType((JvmTypeReference)null);
        return;
      case LangPackage.YPROPERTY__TUPLES:
        setTuples((YTuples)null);
        return;
      case LangPackage.YPROPERTY__OPTIONAL:
        setOptional(OPTIONAL_EDEFAULT);
        return;
      case LangPackage.YPROPERTY__ATTR_REF:
        setAttrRef((YAnnotAttr)null);
        return;
      case LangPackage.YPROPERTY__ANNOTATIONS:
        getAnnotations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LangPackage.YPROPERTY__ACCESS:
        return access != ACCESS_EDEFAULT;
      case LangPackage.YPROPERTY__TYPE:
        return type != null;
      case LangPackage.YPROPERTY__TUPLES:
        return tuples != null;
      case LangPackage.YPROPERTY__OPTIONAL:
        return optional != OPTIONAL_EDEFAULT;
      case LangPackage.YPROPERTY__ATTR_REF:
        return attrRef != null;
      case LangPackage.YPROPERTY__ANNOTATIONS:
        return annotations != null && !annotations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (access: ");
    result.append(access);
    result.append(", optional: ");
    result.append(optional);
    result.append(')');
    return result.toString();
  }

} //YPropertyImpl
